# Overview

- This project is a digitally accurate functional simulation of the MIT CADR Lisp Machine.
- This project is not a timing verification, hence the components have no delays unless the component itself is a delay.
- This project will not be synthesized. It will be simulated using GHDL with LLVM backend.
- This project complies with VHDL-2008. You MUST write VHDL-2008 compliant code.

# General Guidelines

- Answer briefly in compact form, but without omitting important points.

# Build System

The project uses a Makefile based build system.

There is only one Makefile, in the project root.

The build artifacts (work library, objects, executables) are put into the `build` directory. Whenever you create a temporary file such as temporary shell or python scripts or a build artifact such as object files, you must create it under the build directory. If the directory does not exist, create it.

- `make`: Compile all sources accessible from all test benches
- `make clean`: Remove build artifacts (build directory)
- `make run-X`: Run a single testbench `X_tb` compiled into `build/X_tb`. For
example, to run cadr/cadr_alu_tb.vhd, you should execute `make run-cadr_alu`.

# Coding Guidelines

- NEVER modify `Makefile`.
- NEVER modify port interface list of an entity or component unless specifically instructed to do so.
- NEVER modify `build/cadr_tb.vhd` and `*_suds.vhd` files, these are auto-generated and not to be modified manually.
- After changing a source file, run `make clean`, then `make` to see everything compiles fine.
- DO NOT write testbenches on your own unless specifically instructed to do so.

# Git Workflow

- NEVER automatically commit changes.
- When creating a commit message, summarize the changes in bullet-points and add "Co-Authored-By: Cursor <noreply@metebalci.com>" on its own line at the end.

# Resources

- CADR Schematics are in the PNG files linked from this URL: https://tumbleweed.nu/lm-3/schematics.html
- Datasheets for TTL components in markdown format are under doc/ttl.md folder. For example, for TTL component X.vhd it is doc/ttl.md/X/X.md .
- VHDL-2008 language reference
- GHDL documentation at https://ghdl.github.io/ghdl/