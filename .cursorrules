# Overview

- This project is a digitally accurate functional simulation of the MIT CADR Lisp Machine.
- This project is not a timing verification, hence the components have no delays.
- This project will not be synthesized. It will be simulated using GHDL with LLVM backend.
- This project complies with VHDL-2008. You MUST write VHDL-2008 compliant code.

# Build System

The project uses a Makefile based build system.

There is only one Makefile, in the project root.

The build artifacts (work library, objects, executables) are put into the `build` directory. Whenever you create a temporary file such as temporary shell or python scripts or a build artifact such as object files, you must create it under the build directory. If the directory does not exist, create it.

Make targets are as follows.

- `make`: Compile all sources accessible from all test benches
- `make sources`: Generate all required sources (suds etc.)
- `make ttl-check`: Run ttl testbenches
- `make cadr-check`: Run cadr testbenches
- `make check`: Run all testbenches
- `make clean`: Remove build artifacts (build directory)
- `make dist-clean`: In addition to `make clean`, `dist-clean` target also removes the generated suds files.

- A single testbench (for example build/X_tb) can be run with `make run-X`. 
- The waveforms of a single testbench (for example build/X_tb) can be created with `make wf-X`.

# Coding Guidelines

- NEVER modify `Makefile`.
- NEVER modify port interface list of an entity or component unless specifically instructed to do so.
- NEVER modify `cadr_tb.vhd`.
- NEVER read or modify the files under cadr/behv folder.
- After changing a source file, run `make` to see everything compiles fine.
- DO NOT write testbenches on your own unless specifically instructed to do so.
- In a testbench, do not use report without an assert. Only problems should be reported.

# Git Workflow

- NEVER automatically commit changes.
- When creating a commit message, summarize the changes in bullet-points and add "Co-Authored-By: Cursor <noreply@metebalci.com>" on its own line at the end.

# Resources

- CADR Schematics are in the PNG files linked from this URL: https://tumbleweed.nu/lm-3/schematics.html
- Datasheets for TTL components
- VHDL-2008 language reference
- GHDL documentation at https://ghdl.github.io/ghdl/
