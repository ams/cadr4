.PARALLEL:

# vhdl standard 2008
NVCSTD := 08

NVC_WORK_DIR 		:= $(BUILDDIR)/nvc
NVC_FILE_LIST		:= $(BUILDDIR)/nvc.filelist
NVC_SIGNALS_FILE	:= $(BUILDDIR)/nvc.signals

# make tb unit names uppercase, nvc defaults to uppercase
NVC_EXES		:= $(shell echo "$(EXES)" | tr '[:lower:]' '[:upper:]')

NVC_RUNTIME_OPTIONS := --stats
NVC_GLOBAL_OPTS	:= --work=work:$(NVC_WORK_DIR) --std=$(NVCSTD) --vhpi-debug

# asserts can be disabled to improve performance
ifeq ($(CADR4_NOASSERTS),1)
NVC_RUNTIME_OPTIONS += --exit-severity=failure
NVC_GLOBAL_OPTS 	+= --ieee-warnings=off
else
NVC_RUNTIME_OPTIONS += --exit-severity=note
endif

# this is a function and to be called with the testbench name as argument
NVC_WAVE_OPTS = --format=$(CADR4_WAVEFORMAT) --wave=$(BUILDDIR)/$1.$(CADR4_WAVEFORMAT) --gtkw=$(NVC_SIGNALS_FILE)

# add stoptime if requested
ifeq ($(CADR4_STOPTIME),0)
NVC_STOPTIME_OPTS :=
else
NVC_STOPTIME_OPTS := --stop-time=$(CADR4_STOPTIME)
endif

UC = $(shell echo '$1' | tr '[:lower:]' '[:upper:]')

.NOTPARALLEL:

$(NVC_FILE_LIST): $(SRCS)
	mkdir -p $(BUILDDIR)
	@scripts/generate_tofl.py -o $@ $^

$(NVC_WORK_DIR): $(NVC_FILE_LIST)
	$(CADR4_NVC) $(NVC_GLOBAL_OPTS) -a @$^
	
.PARALLEL:

# order-only prerequisite to ignore directory modification timestamps
$(NVC_WORK_DIR)/WORK.%.elab: $(SRCS) $(NVC_WORK_DIR)
	$(CADR4_NVC) $(NVC_GLOBAL_OPTS) -e $*

# compile and link cosim vhpi sources into cosim.so
$(COSIM_VHPI_LIB): $(COSIM_VHPI_CSRCS)
	mkdir -p $(BUILDDIR)
	$(CADR4_NVC_VHPI_CC) -shared -fPIC -Wl,-undefined,dynamic_lookup -I$(CADR4_NVC_VHPI_USER_H_DIR) -I$(COSIM_VHPI_DIR) -o $(COSIM_VHPI_LIB) $^

.PHONY: all
all: $(addprefix $(NVC_WORK_DIR)/,$(patsubst %,WORK.%.elab,$(call UC,$(EXES)))) $(COSIM_VHPI_LIB)

.PHONY: cosim
cosim: $(COSIM_VHPI_LIB)

# the complicated rules below with .SECONDEXPANSION is to expand the call UC
# second time, otherwise it doesnt work

.PHONY: run-%
.SECONDEXPANSION:
run-%: $(NVC_WORK_DIR)/WORK.$$(call UC,%).elab $(COSIM_VHPI_LIB)
	$(CADR4_NVC) $(NVC_GLOBAL_OPTS) --load=$(COSIM_VHPI_LIB) -r $(NVC_RUNTIME_OPTIONS) $(call UC,$*)

.PHONY: wf-%
.SECONDEXPANSION:
wf-%: $(NVC_WORK_DIR)/WORK.$$(call UC,%).elab $(COSIM_VHPI_LIB)
	$(CADR4_NVC) $(NVC_GLOBAL_OPTS) --load=$(COSIM_VHPI_LIB) -r $(NVC_RUNTIME_OPTIONS) $(call NVC_WAVE_OPTS,$*) $(NVC_STOPTIME_OPTS) $(call UC,$*)